"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DEBUG_NAMESPACE_REQUESTS_AND_RESPONSES = exports.DEBUG_NAMESPACE_ENHANCED_ERROR_HANDLING = exports.DEBUG_NAMESPACE_TX_STATUS_CHANGES = exports.DEBUG_NAMESPACE = exports.FINAL_SUCCESSFUL_TRANSACTION_STATES = exports.FINAL_TRANSACTION_STATES = exports.SIGNER_METHODS = exports.ASSETS = void 0;
const fireblocks_sdk_1 = require("fireblocks-sdk");
const types_1 = require("./types");
exports.ASSETS = {
    [types_1.ChainId.MAINNET]: { assetId: 'ETH', rpcUrl: "https://cloudflare-eth.com" },
    [types_1.ChainId.ROPSTEN]: { assetId: 'ETH_TEST', rpcUrl: "https://rpc.ankr.com/eth_ropsten" },
    [types_1.ChainId.KOVAN]: { assetId: 'ETH_TEST2', rpcUrl: "https://kovan.poa.network" },
    [types_1.ChainId.GOERLI]: { assetId: 'ETH_TEST3', rpcUrl: "https://rpc.ankr.com/eth_goerli" },
    [types_1.ChainId.RINKEBY]: { assetId: 'ETH_TEST4', rpcUrl: "https://rpc.ankr.com/eth_rinkeby" },
    [types_1.ChainId.SEPOLIA]: { assetId: 'ETH_TEST5', rpcUrl: "https://rpc.sepolia.org" },
    [types_1.ChainId.HOLESKY]: { assetId: 'ETH_TEST6', rpcUrl: "https://ethereum-holesky.publicnode.com" },
    [types_1.ChainId.BSC]: { assetId: 'BNB_BSC', rpcUrl: "https://bsc-dataseed.binance.org" },
    [types_1.ChainId.BSC_TEST]: { assetId: 'BNB_TEST', rpcUrl: "https://data-seed-prebsc-1-s1.binance.org:8545" },
    [types_1.ChainId.POLYGON]: { assetId: 'MATIC_POLYGON', rpcUrl: "https://polygon-rpc.com" },
    [types_1.ChainId.POLYGON_TEST]: { assetId: 'MATIC_POLYGON_MUMBAI', rpcUrl: "https://rpc-mumbai.maticvigil.com" },
    [types_1.ChainId.AVALANCHE]: { assetId: 'AVAX', rpcUrl: "https://api.avax.network/ext/bc/C/rpc" },
    [types_1.ChainId.AVALANCHE_TEST]: { assetId: 'AVAXTEST', rpcUrl: "https://api.avax-test.network/ext/bc/C/rpc" },
    [types_1.ChainId.MOONRIVER]: { assetId: 'MOVR_MOVR', rpcUrl: "https://rpc.moonriver.moonbeam.network" },
    [types_1.ChainId.MOONBEAM]: { assetId: 'GLMR_GLMR', rpcUrl: "https://rpc.api.moonbeam.network" },
    [types_1.ChainId.SONGBIRD]: { assetId: 'SGB', rpcUrl: "https://songbird.towolabs.com/rpc" },
    [types_1.ChainId.ARBITRUM]: { assetId: 'ETH-AETH', rpcUrl: "https://rpc.ankr.com/arbitrum" },
    [types_1.ChainId.ARBITRUM_RIN]: { assetId: 'ETH-AETH-RIN', rpcUrl: "https://rinkeby.arbitrum.io/rpc" },
    [types_1.ChainId.FANTOM]: { assetId: 'FTM_FANTOM', rpcUrl: "https://rpc.ftm.tools/" },
    [types_1.ChainId.RSK]: { assetId: 'RBTC', rpcUrl: "https://public-node.rsk.co" },
    [types_1.ChainId.RSK_TEST]: { assetId: 'RBTC_TEST', rpcUrl: "https://public-node.testnet.rsk.co" },
    [types_1.ChainId.CELO]: { assetId: 'CELO', rpcUrl: "https://rpc.ankr.com/celo" },
    [types_1.ChainId.CELO_BAK]: { assetId: 'CELO_BAK', rpcUrl: "https://baklava-blockscout.celo-testnet.org/api/eth-rpc" },
    [types_1.ChainId.CELO_ALF]: { assetId: 'CELO_ALF', rpcUrl: "https://alfajores-forno.celo-testnet.org/api/eth-rpc" },
    [types_1.ChainId.OPTIMISM]: { assetId: 'ETH-OPT', rpcUrl: "https://rpc.ankr.com/optimism" },
    [types_1.ChainId.OPTIMISM_KOVAN]: { assetId: 'ETH-OPT_KOV', rpcUrl: "https://kovan.optimism.io/" },
    [types_1.ChainId.RONIN]: { assetId: 'RON', rpcUrl: "https://api.roninchain.com/rpc" },
    [types_1.ChainId.CANTO]: { assetId: 'CANTO', rpcUrl: "https://canto.gravitychain.io" },
    [types_1.ChainId.CANTO_TEST]: { assetId: 'CANTO_TEST', rpcUrl: "https://testnet-archive.plexnode.wtf" },
    [types_1.ChainId.POLYGON_ZKEVM]: { assetId: 'ETH_ZKEVM', rpcUrl: "https://zkevm-rpc.com" },
    [types_1.ChainId.POLYGON_ZKEVM_TEST]: { assetId: 'ETH_ZKEVM_TEST', rpcUrl: "https://rpc.public.zkevm-test.net" },
    [types_1.ChainId.KAVA]: { assetId: 'KAVA_KAVA', rpcUrl: "https://evm.kava.io" },
    [types_1.ChainId.SMARTBCH]: { assetId: 'SMARTBCH', rpcUrl: "https://smartbch.greyh.at" },
    [types_1.ChainId.SMARTBCH_TEST]: { assetId: 'ETHW', rpcUrl: "https://rpc-testnet.smartbch.org" },
    [types_1.ChainId.HECO]: { assetId: 'HT_CHAIN', rpcUrl: "https://http-mainnet.hecochain.com" },
    [types_1.ChainId.AURORA]: { assetId: 'AURORA_DEV', rpcUrl: "https://mainnet.aurora.dev" },
    [types_1.ChainId.RISEOFTHEWARBOTSTESTNET]: { assetId: 'TKX', rpcUrl: "https://testnet1.rotw.games" },
    [types_1.ChainId.EVMOS]: { assetId: 'EVMOS', rpcUrl: "https://eth.bd.evmos.org" },
    [types_1.ChainId.ASTAR]: { assetId: 'ASTR_ASTR', rpcUrl: "https://evm.astar.network" },
    [types_1.ChainId.VELAS]: { assetId: 'VLX_VLX', rpcUrl: "https://evmexplorer.velas.com/rpc" },
    [types_1.ChainId.ARB_GOERLI]: { assetId: 'ETH-AETH_GOERLI', rpcUrl: "https://endpoints.omniatech.io/v1/arbitrum/goerli/public" },
    [types_1.ChainId.XDC]: { assetId: 'XDC', rpcUrl: "https://rpc.xdcrpc.com" },
    [types_1.ChainId.BASE]: { assetId: 'BASECHAIN_ETH', rpcUrl: "https://mainnet.base.org" },
    [types_1.ChainId.IVAR]: { assetId: 'CHZ_CHZ2', rpcUrl: "https://mainnet-rpc.ivarex.com" },
    [types_1.ChainId.JOC]: { assetId: 'ASTR_TEST', rpcUrl: "https://rpc-1.japanopenchain.org:8545" },
    [types_1.ChainId.OASYS]: { assetId: 'OAS', rpcUrl: "https://oasys.blockpi.network/v1/rpc/public" },
    [types_1.ChainId.SHIMMEREVM]: { assetId: 'SMR_SMR', rpcUrl: "https://json-rpc.evm.shimmer.network" },
    [types_1.ChainId.LINEA]: { assetId: 'LINEA', rpcUrl: "https://rpc.linea.build" },
    [types_1.ChainId.LINEA_TEST]: { assetId: 'LINEA_TEST', rpcUrl: "https://rpc.goerli.linea.build" },
    [types_1.ChainId.FLARE]: { assetId: 'FLR', rpcUrl: "https://flare-api.flare.network/ext/C/rpc" },
};
exports.SIGNER_METHODS = [
    "eth_sendTransaction",
    "personal_sign",
    "eth_signTypedData",
    "eth_signTypedData_v1",
    "eth_signTypedData_v3",
    "eth_signTypedData_v4",
    "eth_requestAccounts",
    "eth_accounts",
    "eth_sign",
    "eth_signTransaction",
];
exports.FINAL_TRANSACTION_STATES = [
    fireblocks_sdk_1.TransactionStatus.COMPLETED,
    fireblocks_sdk_1.TransactionStatus.FAILED,
    fireblocks_sdk_1.TransactionStatus.CANCELLED,
    fireblocks_sdk_1.TransactionStatus.BLOCKED,
    fireblocks_sdk_1.TransactionStatus.REJECTED,
    fireblocks_sdk_1.TransactionStatus.BROADCASTING,
    fireblocks_sdk_1.TransactionStatus.CONFIRMING,
];
exports.FINAL_SUCCESSFUL_TRANSACTION_STATES = [
    fireblocks_sdk_1.TransactionStatus.COMPLETED,
    fireblocks_sdk_1.TransactionStatus.BROADCASTING,
    fireblocks_sdk_1.TransactionStatus.CONFIRMING,
];
exports.DEBUG_NAMESPACE = 'fireblocks-web3-provider';
exports.DEBUG_NAMESPACE_TX_STATUS_CHANGES = `${exports.DEBUG_NAMESPACE}:status`;
exports.DEBUG_NAMESPACE_ENHANCED_ERROR_HANDLING = `${exports.DEBUG_NAMESPACE}:error`;
exports.DEBUG_NAMESPACE_REQUESTS_AND_RESPONSES = `${exports.DEBUG_NAMESPACE}:req_res`;
//# sourceMappingURL=constants.js.map